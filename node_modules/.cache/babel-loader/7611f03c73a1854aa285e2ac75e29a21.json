{"ast":null,"code":"var _jsxFileName = \"/home/eke/patient-eth/src/CreatePatientForm.js\";\nimport React, { useState } from 'react';\nimport './App.scss';\nimport useForm from './useForm';\nimport validate from './validateRegister';\nimport { default as Web3 } from 'web3';\nimport ipfs from './ipfs';\nimport contract from 'truffle-contract';\nimport patientindex_artifacts from './abi/PatientIndex'; // window.$ = window.jQuery = jQuery;\n\nconst CreatePatientForm = props => {\n  const INITIAL_STATE = {\n    username: \"\",\n    password: \"\",\n    fname: \"\",\n    surname: \"\",\n    email: \"\",\n    age: \"\",\n    sex: \"\",\n    id: \"\",\n    ins: \"\",\n    ETHaddress: \"\"\n  }; // const contract = require('truffle-contract');\n  // const patientIndex = contract(PatientIndex);\n\n  var Patient = contract(patientindex_artifacts); // var ipfsHash = ‘’;\n\n  var ipfsHash = 'not-available';\n  const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\");\n  const ethereum = window.ethereum;\n  const [addre, setAddre] = useState('Press Enable Ethereum!');\n  const {\n    handleSubmit,\n    handleChange,\n    values,\n    errors\n  } = useForm(submit, INITIAL_STATE, validate);\n\n  function submit() {\n    console.log(\"submitted successfully\");\n    const js = JSON.stringify(values.ETHaddress + values.username + ipfsHash);\n    console.log(js);\n    Patient.setProvider(values.ETHaddress);\n    Patient.deployed().then(function (contractInstance) {\n      contractInstance.registerPatient(values.username, ipfsHash).then(function (success) {\n        if (success) {\n          console.log(\"created user on ethereum!\");\n        } else {\n          console.log(\"error creating user on ethereum!\");\n        }\n      });\n    });\n  }\n\n  const ethereumButton = () => {\n    if (ethereum) {\n      web3.eth.getAccounts((err, accounts) => {\n        if (accounts.length == 0) {\n          // there is no active accounts in MetaMask\n          this.console.log('there is no active accounts in MetaMask');\n        } else {\n          // It's ok\n          web3.eth.getAccounts(console.log);\n          ethereum.on('accountsChanged', function (accounts) {\n            console.log(ethereum.selectedAddress);\n            INITIAL_STATE.ETHaddress = ethereum.selectedAddress;\n          });\n        }\n      });\n    }\n\n    ethereum.on('accountsChanged', function (accounts) {\n      setAddre(ethereum.selectedAddress);\n      INITIAL_STATE.ETHaddress = ethereum.selectedAddress;\n    });\n    setAddre(ethereum.selectedAddress);\n    INITIAL_STATE.ETHaddress = ethereum.selectedAddress;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    class: \"col-lg-3 mt-1 mb-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card card-profile-signup p-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"formbase\",\n    noValidate: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    class: \"card-body\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h5\", {\n    class: \"card-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }\n  }, \"Create your profile\"), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"username\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 9\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"username\",\n    value: values.username,\n    type: \"text\",\n    class: \"form-control\",\n    id: \"sign-up-username\",\n    required: \"required\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 29\n    }\n  }, errors.username)), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"password\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }\n  }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"password\",\n    value: values.password,\n    type: \"password\",\n    class: \"form-control\",\n    id: \"sign-up-password\",\n    required: \"required\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }\n  }, errors.password)), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 9\n    }\n  }, \"First Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"fname\",\n    value: values.fname,\n    class: \"form-control\",\n    id: \"sign-up-name\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"surname\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }\n  }, \"Surname\"), /*#__PURE__*/React.createElement(\"input\", {\n    name: \"surname\",\n    value: values.surname,\n    type: \"text\",\n    class: \"form-control\",\n    id: \"sign-up-srname\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    value: values.email,\n    name: \"email\",\n    class: \"form-control\",\n    id: \"sign-up-email\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"age\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 9\n    }\n  }, \"Age\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: values.age,\n    name: \"age\",\n    class: \"form-control\",\n    id: \"sign-up-age\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"sex\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }\n  }, \"Sex\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: values.sex,\n    name: \"sex\",\n    class: \"form-control\",\n    id: \"sign-up-sex\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"id\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 9\n    }\n  }, \"Identity No.\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: values.id,\n    name: \"id\",\n    class: \"form-control\",\n    id: \"sign-up-idno\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    class: \"form-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"ins\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, \"Insurance No.\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ins\",\n    value: values.ins,\n    class: \"form-control\",\n    id: \"sign-up-insno\",\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 7\n    }\n  }, \"ETH Address:\", /*#__PURE__*/React.createElement(\"span\", {\n    class: \"eth-address\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"ethaddress\",\n    class: \"form-control\",\n    id: \"sign-up-eth-address\",\n    value: addre,\n    disabled: true,\n    onChange: handleChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    class: \"btn btn-primary\",\n    id: \"sign-up-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }\n  }, \"Sign Up\"))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: ethereumButton,\n    class: \"enableEthereumButton\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 3\n    }\n  }, \"Enable Ethereum\")));\n};\n\nexport default CreatePatientForm;","map":{"version":3,"sources":["/home/eke/patient-eth/src/CreatePatientForm.js"],"names":["React","useState","useForm","validate","default","Web3","ipfs","contract","patientindex_artifacts","CreatePatientForm","props","INITIAL_STATE","username","password","fname","surname","email","age","sex","id","ins","ETHaddress","Patient","ipfsHash","web3","givenProvider","ethereum","window","addre","setAddre","handleSubmit","handleChange","values","errors","submit","console","log","js","JSON","stringify","setProvider","deployed","then","contractInstance","registerPatient","success","ethereumButton","eth","getAccounts","err","accounts","length","on","selectedAddress"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport './App.scss';\nimport useForm from './useForm';\nimport validate from './validateRegister';\nimport {default as Web3} from 'web3';\nimport ipfs from './ipfs';\nimport contract from 'truffle-contract';\nimport patientindex_artifacts from './abi/PatientIndex'\n\n// window.$ = window.jQuery = jQuery;\n\nconst CreatePatientForm = (props) => {\n  const INITIAL_STATE = {\n    username: \"\",\n    password: \"\",\n    fname:\"\",\n    surname:\"\",\n    email:\"\",\n    age:\"\",\n    sex:\"\",\n    id:\"\",\n    ins:\"\",\n    ETHaddress:\"\"\n  }\n\n  // const contract = require('truffle-contract');\n  // const patientIndex = contract(PatientIndex);\n  var Patient = contract(patientindex_artifacts);\n\n   // var ipfsHash = ‘’;\n  var ipfsHash = 'not-available';\n\n  const web3 = new Web3(Web3.givenProvider || \"http://localhost:7545\" );\n  const ethereum = window.ethereum;\n  const [addre,setAddre] = useState('Press Enable Ethereum!')\n  const {handleSubmit, handleChange, values, errors} = useForm(submit,INITIAL_STATE,validate);\n\n\n  function submit(){\n    console.log(\"submitted successfully\")\n    const js = JSON.stringify(values.ETHaddress + values.username + ipfsHash);\n    console.log(js)\n    Patient.setProvider(values.ETHaddress);\n    Patient.deployed().then(function(contractInstance){\n      contractInstance.registerPatient(values.username, ipfsHash).then(function(success){\n        if(success){\n        console.log(\"created user on ethereum!\");\n        }else{\n          console.log(\"error creating user on ethereum!\");\n        }\n      });\n    })\n  }\n\n\n\n const ethereumButton = () => {\n  if(ethereum){\n    web3.eth.getAccounts((err, accounts) => {\n      if (accounts.length == 0) {\n        // there is no active accounts in MetaMask\n        this.console.log('there is no active accounts in MetaMask')\n      }else {\n        // It's ok\n          web3.eth.getAccounts(console.log);\n          ethereum.on('accountsChanged',function(accounts){\n          console.log(ethereum.selectedAddress)\n          INITIAL_STATE.ETHaddress = ethereum.selectedAddress\n        });\n        }\n      });\n    }\n    ethereum.on('accountsChanged',function(accounts){\n      setAddre(ethereum.selectedAddress)\n      INITIAL_STATE.ETHaddress = ethereum.selectedAddress\n    });\n    setAddre(ethereum.selectedAddress)\n    INITIAL_STATE.ETHaddress = ethereum.selectedAddress\n\n  }\n\nreturn(\n<div class=\"col-lg-3 mt-1 mb-1\">\n<div class=\"card card-profile-signup p-1\">\n  <form onSubmit={handleSubmit} className='formbase' noValidate>\n    <div class=\"card-body\">\n      <h5 class=\"card-title\">Create your profile</h5>\n      <div class=\"form-group\">\n        <label for=\"username\">Username</label>\n        <input name=\"username\"\n               value={values.username}\n               type=\"text\" \n               class=\"form-control\" \n               id=\"sign-up-username\" \n               required=\"required\"\n               onChange={handleChange}\n        />\n        {errors.username && <p>{errors.username}</p>}\n      </div>\n      <div class=\"form-group\">\n        <label for=\"password\">Password</label>\n        <input name=\"password\"\n               value={values.password}\n               type=\"password\" \n               class=\"form-control\" \n               id=\"sign-up-password\" \n               required=\"required\"\n               onChange={handleChange}\n        />\n        {errors.password && <p>{errors.password}</p>}\n      </div>\n      <div class=\"form-group\">\n        <label for=\"name\">First Name</label>\n        <input type=\"text\" \n               name=\"fname\"\n               value={values.fname}\n               class=\"form-control\" \n               id=\"sign-up-name\"\n               onChange={handleChange}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"surname\">Surname</label>\n        <input name=\"surname\"\n               value={values.surname}\n               type=\"text\" class=\"form-control\" \n               id=\"sign-up-srname\"\n               onChange={handleChange}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"email\">Email</label>\n        <input type=\"email\" \n               value={values.email}\n               name=\"email\" \n               class=\"form-control\" \n               id=\"sign-up-email\"\n               onChange={handleChange}\n               \n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"age\">Age</label>\n        <input type=\"text\"\n               value={values.age}\n               name=\"age\" class=\"form-control\" \n               id=\"sign-up-age\"\n               onChange={handleChange}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"sex\">Sex</label>\n        <input type=\"text\"\n               value={values.sex}\n               name=\"sex\" \n               class=\"form-control\" \n               id=\"sign-up-sex\"\n               onChange={handleChange}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"id\">Identity No.</label>\n        <input type=\"text\"\n               value={values.id}\n               name=\"id\" class=\"form-control\" \n               id=\"sign-up-idno\"\n               onChange={handleChange}\n        />\n      </div>\n      <div class=\"form-group\">\n        <label for=\"ins\">Insurance No.</label>\n        <input type=\"text\"\n               name=\"ins\" \n               value={values.ins}\n               class=\"form-control\" \n               id=\"sign-up-insno\"\n               onChange={handleChange}\n        />\n      </div>\n      {/* <div class=\"form-group\">\n        <label for=\"username\">Short intro</label>\n        <textarea class=\"form-control\" id=\"sign-up-intro\" rows=\"2\"></textarea>\n      </div> */}\n      <p>ETH Address:\n        <span class=\"eth-address\"></span>\n        <input type=\"text\"\n               name=\"ethaddress\" \n               class=\"form-control\" id=\"sign-up-eth-address\" \n               value={addre}\n               disabled\n               onChange={handleChange}\n        />\n      </p>\n      <button type=\"submit\" class=\"btn btn-primary\" id=\"sign-up-button\">Sign Up</button>\n    </div>\n   \n  </form>\n  <button onClick={ethereumButton} class=\"enableEthereumButton\">Enable Ethereum</button>\n</div>\n</div>\n );\n}\n\nexport default CreatePatientForm;\n"]},"metadata":{},"sourceType":"module"}