{"ast":null,"code":"'use strict';\n\nvar varint = require('varint');\n\nvar svarint = require('signed-varint');\n\nconst {\n  Buffer\n} = require('buffer');\n\nvar encoder = function (type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0;\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  };\n};\n\nexports.make = encoder;\n\nexports.bytes = function (tag) {\n  var bufferLength = function (val) {\n    return Buffer.isBuffer(val) ? val.length : Buffer.byteLength(val);\n  };\n\n  var encodingLength = function (val) {\n    var len = bufferLength(val);\n    return varint.encodingLength(len) + len;\n  };\n\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset;\n    var len = bufferLength(val);\n    varint.encode(len, buffer, offset);\n    offset += varint.encode.bytes;\n    if (Buffer.isBuffer(val)) val.copy(buffer, offset);else buffer.write(val, offset, len);\n    offset += len;\n    encode.bytes = offset - oldOffset;\n    return buffer;\n  };\n\n  var decode = function (buffer, offset) {\n    var oldOffset = offset;\n    var len = varint.decode(buffer, offset);\n    offset += varint.decode.bytes;\n    var val = buffer.slice(offset, offset + len);\n    offset += val.length;\n    decode.bytes = offset - oldOffset;\n    return val;\n  };\n\n  return encoder(2, encode, decode, encodingLength);\n}();\n\nexports.string = function () {\n  var encodingLength = function (val) {\n    var len = Buffer.byteLength(val);\n    return varint.encodingLength(len) + len;\n  };\n\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset;\n    var len = Buffer.byteLength(val);\n    varint.encode(len, buffer, offset, 'utf-8');\n    offset += varint.encode.bytes;\n    buffer.write(val, offset, len);\n    offset += len;\n    encode.bytes = offset - oldOffset;\n    return buffer;\n  };\n\n  var decode = function (buffer, offset) {\n    var oldOffset = offset;\n    var len = varint.decode(buffer, offset);\n    offset += varint.decode.bytes;\n    var val = buffer.toString('utf-8', offset, offset + len);\n    offset += len;\n    decode.bytes = offset - oldOffset;\n    return val;\n  };\n\n  return encoder(2, encode, decode, encodingLength);\n}();\n\nexports.bool = function () {\n  var encodingLength = function (val) {\n    return 1;\n  };\n\n  var encode = function (val, buffer, offset) {\n    buffer[offset] = val ? 1 : 0;\n    encode.bytes = 1;\n    return buffer;\n  };\n\n  var decode = function (buffer, offset) {\n    var bool = buffer[offset] > 0;\n    decode.bytes = 1;\n    return bool;\n  };\n\n  return encoder(0, encode, decode, encodingLength);\n}();\n\nexports.int32 = function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset);\n    decode.bytes = varint.decode.bytes;\n    return val > 2147483647 ? val - 4294967296 : val;\n  };\n\n  var encode = function (val, buffer, offset) {\n    varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset);\n    encode.bytes = varint.encode.bytes;\n    return buffer;\n  };\n\n  var encodingLength = function (val) {\n    return varint.encodingLength(val < 0 ? val + 4294967296 : val);\n  };\n\n  return encoder(0, encode, decode, encodingLength);\n}();\n\nexports.int64 = function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset);\n\n    if (val >= Math.pow(2, 63)) {\n      var limit = 9;\n\n      while (buffer[offset + limit - 1] === 0xff) limit--;\n\n      limit = limit || 9;\n      var subset = Buffer.allocUnsafe(limit);\n      buffer.copy(subset, 0, offset, offset + limit);\n      subset[limit - 1] = subset[limit - 1] & 0x7f;\n      val = -1 * varint.decode(subset, 0);\n      decode.bytes = 10;\n    } else {\n      decode.bytes = varint.decode.bytes;\n    }\n\n    return val;\n  };\n\n  var encode = function (val, buffer, offset) {\n    if (val < 0) {\n      var last = offset + 9;\n      varint.encode(val * -1, buffer, offset);\n      offset += varint.encode.bytes - 1;\n      buffer[offset] = buffer[offset] | 0x80;\n\n      while (offset < last - 1) {\n        offset++;\n        buffer[offset] = 0xff;\n      }\n\n      buffer[last] = 0x01;\n      encode.bytes = 10;\n    } else {\n      varint.encode(val, buffer, offset);\n      encode.bytes = varint.encode.bytes;\n    }\n\n    return buffer;\n  };\n\n  var encodingLength = function (val) {\n    return val < 0 ? 10 : varint.encodingLength(val);\n  };\n\n  return encoder(0, encode, decode, encodingLength);\n}();\n\nexports.sint32 = exports.sint64 = function () {\n  return encoder(0, svarint.encode, svarint.decode, svarint.encodingLength);\n}();\n\nexports.uint32 = exports.uint64 = exports.enum = exports.varint = function () {\n  return encoder(0, varint.encode, varint.decode, varint.encodingLength);\n}(); // we cannot represent these in javascript so we just use buffers\n\n\nexports.fixed64 = exports.sfixed64 = function () {\n  var encodingLength = function (val) {\n    return 8;\n  };\n\n  var encode = function (val, buffer, offset) {\n    val.copy(buffer, offset);\n    encode.bytes = 8;\n    return buffer;\n  };\n\n  var decode = function (buffer, offset) {\n    var val = buffer.slice(offset, offset + 8);\n    decode.bytes = 8;\n    return val;\n  };\n\n  return encoder(1, encode, decode, encodingLength);\n}();\n\nexports.double = function () {\n  var encodingLength = function (val) {\n    return 8;\n  };\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeDoubleLE(val, offset);\n    encode.bytes = 8;\n    return buffer;\n  };\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readDoubleLE(offset);\n    decode.bytes = 8;\n    return val;\n  };\n\n  return encoder(1, encode, decode, encodingLength);\n}();\n\nexports.fixed32 = function () {\n  var encodingLength = function (val) {\n    return 4;\n  };\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeUInt32LE(val, offset);\n    encode.bytes = 4;\n    return buffer;\n  };\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readUInt32LE(offset);\n    decode.bytes = 4;\n    return val;\n  };\n\n  return encoder(5, encode, decode, encodingLength);\n}();\n\nexports.sfixed32 = function () {\n  var encodingLength = function (val) {\n    return 4;\n  };\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeInt32LE(val, offset);\n    encode.bytes = 4;\n    return buffer;\n  };\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readInt32LE(offset);\n    decode.bytes = 4;\n    return val;\n  };\n\n  return encoder(5, encode, decode, encodingLength);\n}();\n\nexports.float = function () {\n  var encodingLength = function (val) {\n    return 4;\n  };\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeFloatLE(val, offset);\n    encode.bytes = 4;\n    return buffer;\n  };\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readFloatLE(offset);\n    decode.bytes = 4;\n    return val;\n  };\n\n  return encoder(5, encode, decode, encodingLength);\n}();","map":{"version":3,"sources":["/home/eke/patient-eth/node_modules/protons/src/compile/encodings.js"],"names":["varint","require","svarint","Buffer","encoder","type","encode","decode","encodingLength","bytes","exports","make","tag","bufferLength","val","isBuffer","length","byteLength","len","buffer","offset","oldOffset","copy","write","slice","string","toString","bool","int32","int64","Math","pow","limit","subset","allocUnsafe","last","sint32","sint64","uint32","uint64","enum","fixed64","sfixed64","double","writeDoubleLE","readDoubleLE","fixed32","writeUInt32LE","readUInt32LE","sfixed32","writeInt32LE","readInt32LE","float","writeFloatLE","readFloatLE"],"mappings":"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","sourcesContent":["'use strict'\n\nvar varint = require('varint')\nvar svarint = require('signed-varint')\nconst { Buffer } = require('buffer')\n\nvar encoder = function (type, encode, decode, encodingLength) {\n  encode.bytes = decode.bytes = 0\n\n  return {\n    type: type,\n    encode: encode,\n    decode: decode,\n    encodingLength: encodingLength\n  }\n}\n\nexports.make = encoder\n\nexports.bytes = (function (tag) {\n  var bufferLength = function (val) {\n    return Buffer.isBuffer(val) ? val.length : Buffer.byteLength(val)\n  }\n\n  var encodingLength = function (val) {\n    var len = bufferLength(val)\n    return varint.encodingLength(len) + len\n  }\n\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset\n    var len = bufferLength(val)\n\n    varint.encode(len, buffer, offset)\n    offset += varint.encode.bytes\n\n    if (Buffer.isBuffer(val)) val.copy(buffer, offset)\n    else buffer.write(val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.slice(offset, offset + len)\n    offset += val.length\n\n    decode.bytes = offset - oldOffset\n    return val\n  }\n\n  return encoder(2, encode, decode, encodingLength)\n})()\n\nexports.string = (function () {\n  var encodingLength = function (val) {\n    var len = Buffer.byteLength(val)\n    return varint.encodingLength(len) + len\n  }\n\n  var encode = function (val, buffer, offset) {\n    var oldOffset = offset\n    var len = Buffer.byteLength(val)\n\n    varint.encode(len, buffer, offset, 'utf-8')\n    offset += varint.encode.bytes\n\n    buffer.write(val, offset, len)\n    offset += len\n\n    encode.bytes = offset - oldOffset\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var oldOffset = offset\n\n    var len = varint.decode(buffer, offset)\n    offset += varint.decode.bytes\n\n    var val = buffer.toString('utf-8', offset, offset + len)\n    offset += len\n\n    decode.bytes = offset - oldOffset\n    return val\n  }\n\n  return encoder(2, encode, decode, encodingLength)\n})()\n\nexports.bool = (function () {\n  var encodingLength = function (val) {\n    return 1\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer[offset] = val ? 1 : 0\n    encode.bytes = 1\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var bool = buffer[offset] > 0\n    decode.bytes = 1\n    return bool\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.int32 = (function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    decode.bytes = varint.decode.bytes\n    return val > 2147483647 ? val - 4294967296 : val\n  }\n\n  var encode = function (val, buffer, offset) {\n    varint.encode(val < 0 ? val + 4294967296 : val, buffer, offset)\n    encode.bytes = varint.encode.bytes\n    return buffer\n  }\n\n  var encodingLength = function (val) {\n    return varint.encodingLength(val < 0 ? val + 4294967296 : val)\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.int64 = (function () {\n  var decode = function (buffer, offset) {\n    var val = varint.decode(buffer, offset)\n    if (val >= Math.pow(2, 63)) {\n      var limit = 9\n      while (buffer[offset + limit - 1] === 0xff) limit--\n      limit = limit || 9\n      var subset = Buffer.allocUnsafe(limit)\n      buffer.copy(subset, 0, offset, offset + limit)\n      subset[limit - 1] = subset[limit - 1] & 0x7f\n      val = -1 * varint.decode(subset, 0)\n      decode.bytes = 10\n    } else {\n      decode.bytes = varint.decode.bytes\n    }\n    return val\n  }\n\n  var encode = function (val, buffer, offset) {\n    if (val < 0) {\n      var last = offset + 9\n      varint.encode(val * -1, buffer, offset)\n      offset += varint.encode.bytes - 1\n      buffer[offset] = buffer[offset] | 0x80\n      while (offset < last - 1) {\n        offset++\n        buffer[offset] = 0xff\n      }\n      buffer[last] = 0x01\n      encode.bytes = 10\n    } else {\n      varint.encode(val, buffer, offset)\n      encode.bytes = varint.encode.bytes\n    }\n    return buffer\n  }\n\n  var encodingLength = function (val) {\n    return val < 0 ? 10 : varint.encodingLength(val)\n  }\n\n  return encoder(0, encode, decode, encodingLength)\n})()\n\nexports.sint32 =\nexports.sint64 = (function () {\n  return encoder(0, svarint.encode, svarint.decode, svarint.encodingLength)\n})()\n\nexports.uint32 =\nexports.uint64 =\nexports.enum =\nexports.varint = (function () {\n  return encoder(0, varint.encode, varint.decode, varint.encodingLength)\n})()\n\n// we cannot represent these in javascript so we just use buffers\nexports.fixed64 =\nexports.sfixed64 = (function () {\n  var encodingLength = function (val) {\n    return 8\n  }\n\n  var encode = function (val, buffer, offset) {\n    val.copy(buffer, offset)\n    encode.bytes = 8\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.slice(offset, offset + 8)\n    decode.bytes = 8\n    return val\n  }\n\n  return encoder(1, encode, decode, encodingLength)\n})()\n\nexports.double = (function () {\n  var encodingLength = function (val) {\n    return 8\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeDoubleLE(val, offset)\n    encode.bytes = 8\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readDoubleLE(offset)\n    decode.bytes = 8\n    return val\n  }\n\n  return encoder(1, encode, decode, encodingLength)\n})()\n\nexports.fixed32 = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeUInt32LE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readUInt32LE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n\nexports.sfixed32 = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeInt32LE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readInt32LE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n\nexports.float = (function () {\n  var encodingLength = function (val) {\n    return 4\n  }\n\n  var encode = function (val, buffer, offset) {\n    buffer.writeFloatLE(val, offset)\n    encode.bytes = 4\n    return buffer\n  }\n\n  var decode = function (buffer, offset) {\n    var val = buffer.readFloatLE(offset)\n    decode.bytes = 4\n    return val\n  }\n\n  return encoder(5, encode, decode, encodingLength)\n})()\n"]},"metadata":{},"sourceType":"script"}